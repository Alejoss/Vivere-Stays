# Remote Database Docker Compose
# Uses remote production database (no local postgres)
# Use this for testing production DB locally OR production deployment

services:
  # Django Backend
  vivere_backend:
    build: ./backend
    container_name: vivere_backend
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    # Use Gunicorn for production instead of runserver
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 --timeout 120 vivere_stays.wsgi:application
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - vivere_network
    restart: unless-stopped

  # React Frontend with SSR
  vivere_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_BASE_URL: http://35.226.220.107:8000
    container_name: vivere_frontend
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://35.226.220.107:8000
    ports:
      - "3000:3000"
    networks:
      - vivere_network
    restart: unless-stopped
    depends_on:
      - vivere_backend

networks:
  vivere_network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
