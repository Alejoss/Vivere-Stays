# Generated by Django 5.0 on 2025-10-02 01:08

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('pms_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pms_hotel_id', models.CharField(blank=True, max_length=255, null=True)),
                ('spreadsheet_id', models.CharField(blank=True, max_length=255, null=True)),
                ('booking_hotel_url', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('street_address', models.CharField(blank=True, help_text='Street address including building number and street name', max_length=500, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='Postal/ZIP code', max_length=20, null=True)),
                ('state_province', models.CharField(blank=True, help_text='State, province, or region', max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number in international format (e.g. +34612345678)', max_length=20, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('cif', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_rooms', models.IntegerField()),
                ('property_type', models.CharField(blank=True, choices=[('hotel', 'Hotel'), ('apartment', 'Apartment'), ('hostel', 'Hostel'), ('guesthouse', 'Guesthouse'), ('other', 'Other')], max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude coordinate', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude coordinate', max_digits=9, null=True)),
                ('rm_email', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='DpHistoricalCompetitorPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=255)),
                ('room_name', models.CharField(max_length=255)),
                ('checkin_date', models.DateField()),
                ('checkout_date', models.DateField()),
                ('raw_price', models.FloatField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('cancellation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('max_persons', models.IntegerField(blank=True, null=True)),
                ('min_los', models.IntegerField(blank=True, null=True)),
                ('sold_out_message', models.CharField(blank=True, max_length=500, null=True)),
                ('taking_reservations', models.BooleanField(blank=True, null=True)),
                ('scrape_date', models.DateField()),
                ('is_available', models.IntegerField(blank=True, null=True)),
                ('num_days', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('update_tz', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Historical Competitor Price',
                'verbose_name_plural': 'Historical Competitor Prices',
            },
        ),
        migrations.CreateModel(
            name='DpLosReduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_time_days', models.IntegerField(default=7)),
                ('occupancy_level', models.CharField(default='50-70', max_length=255)),
                ('los_value', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'LOS Reduction',
                'verbose_name_plural': 'LOS Reductions',
            },
        ),
        migrations.CreateModel(
            name='DpLosSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('day_of_week', models.CharField(default='Monday', max_length=255)),
                ('los_value', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'LOS Setup',
                'verbose_name_plural': 'LOS Setups',
            },
        ),
        migrations.CreateModel(
            name='DpMinimumSellingPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('msp', models.IntegerField()),
                ('period_title', models.CharField(blank=True, help_text='Optional name for this MSP period', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Minimum Selling Price',
                'verbose_name_plural': 'Minimum Selling Prices',
            },
        ),
        migrations.CreateModel(
            name='DpOfferIncrements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('applied_from_days', models.IntegerField(blank=True, null=True)),
                ('applied_until_days', models.IntegerField(blank=True, null=True)),
                ('increment_type', models.CharField(default='Additional', max_length=255)),
                ('increment_value', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Offer Increment',
                'verbose_name_plural': 'Offer Increments',
            },
        ),
        migrations.CreateModel(
            name='DpPriceChangeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pms_hotel_id', models.CharField(max_length=255)),
                ('checkin_date', models.DateField()),
                ('as_of', models.DateTimeField()),
                ('occupancy', models.FloatField(blank=True, null=True)),
                ('msp', models.IntegerField()),
                ('recom_price', models.IntegerField()),
                ('overwrite_price', models.IntegerField(blank=True, null=True)),
                ('recom_los', models.IntegerField()),
                ('overwrite_los', models.IntegerField(blank=True, null=True)),
                ('base_price', models.IntegerField()),
                ('base_price_choice', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Price Change History',
                'verbose_name_plural': 'Price Change Histories',
            },
        ),
        migrations.CreateModel(
            name='DpPropertyCompetitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('only_follow', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Property Competitor',
                'verbose_name_plural': 'Property Competitors',
            },
        ),
        migrations.CreateModel(
            name='DpRoomRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_id', models.CharField(max_length=255)),
                ('is_base_rate', models.BooleanField(default=False)),
                ('increment_type', models.CharField(choices=[('Percentage', 'Percentage'), ('Additional', 'Additional')], default='Percentage', max_length=255)),
                ('increment_value', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Room Rate',
                'verbose_name_plural': 'Room Rates',
            },
        ),
        migrations.CreateModel(
            name='PropertyManagementSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Property Management System',
                'verbose_name_plural': 'Property Management Systems',
            },
        ),
        migrations.CreateModel(
            name='UnifiedRoomsAndRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pms_source', models.CharField(choices=[('apaleo', 'Apaleo'), ('mrplan', 'MrPlan'), ('avirato', 'Avirato')], max_length=50)),
                ('pms_hotel_id', models.CharField(max_length=255)),
                ('room_id', models.CharField(max_length=255)),
                ('rate_id', models.CharField(max_length=255)),
                ('room_name', models.CharField(max_length=255)),
                ('room_description', models.TextField(blank=True, null=True)),
                ('rate_name', models.CharField(max_length=255)),
                ('rate_description', models.TextField(blank=True, null=True)),
                ('rate_category', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Unified Room and Rate',
                'verbose_name_plural': 'Unified Rooms and Rates',
                'db_table': 'core.unified_rooms_and_rates',
            },
        ),
        migrations.CreateModel(
            name='CompetitorCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitor_name', models.CharField(help_text='Name of the competitor hotel', max_length=255)),
                ('booking_link', models.URLField(blank=True, help_text='Booking.com URL for the competitor', null=True)),
                ('suggested_by_user', models.BooleanField(default=False, help_text='Whether this competitor was suggested by the user')),
                ('similarity_score', models.FloatField(blank=True, help_text='AI-generated similarity score (0.0 to 1.0)', null=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('finished', 'Finished'), ('error', 'Error')], default='processing', help_text='Current processing status of this competitor candidate', max_length=20)),
                ('only_follow', models.BooleanField(default=False, help_text='Whether to only follow this competitor without creating a full competitor record')),
                ('deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When the candidate was processed', null=True)),
                ('error_message', models.TextField(blank=True, help_text="Error message if status is 'error'", null=True)),
                ('user', models.ForeignKey(help_text='User who suggested or is processing this competitor', on_delete=django.db.models.deletion.CASCADE, related_name='competitor_candidates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Competitor Candidate',
                'verbose_name_plural': 'Competitor Candidates',
            },
        ),
        migrations.CreateModel(
            name='DpDynamicIncrementsV2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupancy_category', models.CharField(choices=[('0-30', '0-30%'), ('30-50', '30-50%'), ('50-70', '50-70%'), ('70-80', '70-80%'), ('80-90', '80-90%'), ('90-100', '90-100%'), ('100+', '100%+')], default='50-70', help_text='Occupancy level category', max_length=10)),
                ('lead_time_category', models.CharField(choices=[('0-1', '0-1 days'), ('1-3', '1-3 days'), ('3-7', '3-7 days'), ('7-14', '7-14 days'), ('14-30', '14-30 days'), ('30-45', '30-45 days'), ('45-60', '45-60 days'), ('60+', '60+ days')], default='3-7', help_text='Lead time category', max_length=10)),
                ('increment_type', models.CharField(default='Additional', max_length=255)),
                ('increment_value', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who created this dynamic increment', on_delete=django.db.models.deletion.CASCADE, related_name='dynamic_increments_v2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dynamic Increment V2',
                'verbose_name_plural': 'Dynamic Increments V2',
            },
        ),
        migrations.CreateModel(
            name='DpGeneralSettings',
            fields=[
                ('property_id', models.OneToOneField(db_column='property_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dynamic_pricing.property')),
                ('min_competitors', models.IntegerField(default=2)),
                ('comp_price_calculation', models.CharField(default='min', max_length=255)),
                ('future_days_to_price', models.IntegerField(default=365)),
                ('pricing_status', models.CharField(default='offline', max_length=255)),
                ('los_status', models.CharField(default='offline', max_length=255)),
                ('otas_price_diff', models.FloatField(default=0)),
                ('los_num_competitors', models.IntegerField(default=2, help_text='Number of competitors required for LOS calculations')),
                ('los_aggregation', models.CharField(default='min', help_text='LOS aggregation method: min or max', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dynamic Pricing General Settings',
                'verbose_name_plural': 'Dynamic Pricing General Settings',
            },
        ),
    ]
