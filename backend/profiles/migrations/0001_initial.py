# Generated by Django 5.0 on 2025-10-02 01:08

import django.db.models.deletion
import profiles.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dynamic_pricing', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('stripe_session_id', models.CharField(default='', max_length=255, unique=True)),
                ('amount_total', models.IntegerField(default=0, help_text='Stripe gives cents (e.g. 30000 = $300.00)')),
                ('currency', models.CharField(default='', max_length=10)),
                ('payment_status', models.CharField(default='', max_length=50)),
                ('status', models.CharField(default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(default='', max_length=254)),
                ('invoice_id', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('raw_response', models.JSONField(blank=True, default=dict, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(blank=True, max_length=30)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=profiles.models.upload_profile_picture)),
                ('receive_updates', models.BooleanField(default=False, help_text='Whether the user wants to receive email updates')),
                ('dni', models.CharField(blank=True, help_text='Spanish National Identity Document', max_length=20)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number with country code', max_length=20)),
                ('selected_plan', models.CharField(blank=True, help_text='The plan selected by the user during onboarding', max_length=50, null=True)),
                ('onboarding_step', models.CharField(choices=[('register', 'Register'), ('verify_email', 'Verify Email'), ('hotel_information', 'Hotel Information'), ('pms_integration', 'PMS Integration'), ('select_plan', 'Select Plan'), ('payment', 'Payment'), ('add_competitor', 'Add Competitor'), ('msp', 'MSP'), ('complete', 'Complete')], default='register', help_text='Current step in the onboarding process', max_length=20)),
                ('onboarding_completed', models.BooleanField(default=False, help_text='Whether the user has completed the onboarding process')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address for verification', max_length=254)),
                ('code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, help_text='User account (null for anonymous verification)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_verification_codes',
                'indexes': [models.Index(fields=['email', 'created_at'], name='email_verif_email_7b81d2_idx'), models.Index(fields=['user', 'created_at'], name='email_verif_user_id_11837a_idx'), models.Index(fields=['expires_at'], name='email_verif_expires_42d424_idx')],
            },
        ),
        migrations.CreateModel(
            name='PMSIntegrationRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('processing', 'Processing'), ('integrated', 'Integrated'), ('not_supported', 'Not Supported'), ('no_pms', 'No PMS')], default='requested', max_length=20)),
                ('custom_pms_name', models.CharField(blank=True, help_text="Custom PMS name when 'other' is selected", max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pms_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dynamic_pricing.propertymanagementsystem')),
                ('property_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pms_integrations', to='dynamic_pricing.property')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pms_integrations', to='profiles.profile')),
            ],
            options={
                'verbose_name': 'PMS Integration Requirement',
                'verbose_name_plural': 'PMS Integration Requirements',
                'unique_together': {('property_obj', 'profile')},
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('general_question', 'General Question'), ('technical_issue', 'Technical Issue'), ('billing_question', 'Billing Question'), ('feature_request', 'Feature Request'), ('bug_report', 'Bug Report')], default='general_question', max_length=20)),
                ('title', models.CharField(help_text='Brief title for the support ticket', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the issue')),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('screenshot', models.ImageField(blank=True, help_text='Optional screenshot of the issue', null=True, upload_to='support_screenshots/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Support Ticket',
                'verbose_name_plural': 'Support Tickets',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='profiles_su_user_id_859093_idx'), models.Index(fields=['created_at'], name='profiles_su_created_78828e_idx')],
            },
        ),
    ]
