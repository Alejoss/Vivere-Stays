import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Calendar } from "@/components/ui/calendar";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import { format } from "date-fns";

interface MSPPeriod {
  id: string;
  fromDate: string;
  toDate: string;
  price: string;
}

export default function MSP() {
  const navigate = useNavigate();
  const [periods, setPeriods] = useState<MSPPeriod[]>([
    {
      id: "1",
      fromDate: "17/07/2025",
      toDate: "",
      price: "0",
    },
  ]);
  const [openCalendar, setOpenCalendar] = useState<{ [key: string]: boolean }>({});
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");

  const handleBack = () => {
    navigate("/add-competitor");
  };

  const handleFinish = async () => {
    setError("");
    // Require at least one valid period
    if (
      periods.length === 0 ||
      periods.some(
        (p) => !p.fromDate.trim() || !p.toDate.trim() || !p.price.trim() || isNaN(Number(p.price))
      )
    ) {
      setError("Please add at least one valid period with dates and price.");
      return;
    }
    setIsLoading(true);
    try {
      // Simulate backend call
      await new Promise((resolve) => setTimeout(resolve, 1000));
      navigate("/welcome-complete");
    } catch (err) {
      setError("Failed to save MSP periods. Please try again.");
    } finally {
      setIsLoading(false);
    }
  };

  const addPeriod = () => {
    const newPeriod: MSPPeriod = {
      id: Date.now().toString(),
      fromDate: "",
      toDate: "",
      price: "0",
    };
    setPeriods([...periods, newPeriod]);
  };

  const removePeriod = (id: string) => {
    if (periods.length > 1) {
      setPeriods(periods.filter((period) => period.id !== id));
    }
  };

  const updatePeriod = (id: string, field: keyof MSPPeriod, value: string) => {
    setPeriods(
      periods.map((period) =>
        period.id === id ? { ...period, [field]: value } : period,
      ),
    );
  };

  const formatDateForDisplay = (dateStr: string) => {
    if (!dateStr) return "";
    // If already in dd/mm/yyyy format, return as is
    if (dateStr.includes("/")) return dateStr;
    // If it's a Date object string, format it
    try {
      const date = new Date(dateStr);
      return format(date, "dd/MM/yyyy");
    } catch {
      return dateStr;
    }
  };

  const handleDateSelect = (
    date: Date | undefined,
    periodId: string,
    field: "fromDate" | "toDate",
  ) => {
    if (date) {
      const formattedDate = format(date, "dd/MM/yyyy");
      updatePeriod(periodId, field, formattedDate);
    }
    setOpenCalendar((prev) => ({ ...prev, [`${periodId}-${field}`]: false }));
  };

  const parseDate = (dateStr: string): Date | undefined => {
    if (!dateStr) return undefined;
    try {
      // Handle dd/mm/yyyy format
      if (dateStr.includes("/")) {
        const [day, month, year] = dateStr.split("/");
        return new Date(parseInt(year), parseInt(month) - 1, parseInt(day));
      }
      return new Date(dateStr);
    } catch {
      return undefined;
    }
  };

  return (
    <div className="min-h-screen bg-[#F9FAFB] flex flex-col items-center px-4 py-8">
      {/* Logo */}
      <div className="mb-8">
        <img
          src="https://api.builder.io/api/v1/image/assets/TEMP/45994adad9b2b36a95d20ee6e1b3521891b0bf6a?width=480"
          alt="Vivere Stays"
          className="w-[240px] h-[121px]"
        />
      </div>

      {/* Progress Bar */}
      <div className="flex justify-center items-center mb-10 w-full max-w-[1245px]">
        {/* Account - Completed */}
        <div className="flex items-center gap-[14px]">
          <div className="flex justify-center items-center gap-2">
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.5 15.25C10.307 15.2352 10.1276 15.1455 9.99998 15L6.99998 12C6.93314 11.86 6.91133 11.7028 6.93756 11.5499C6.96379 11.3971 7.03676 11.2561 7.14643 11.1464C7.2561 11.0368 7.39707 10.9638 7.54993 10.9376C7.70279 10.9113 7.86003 10.9331 7.99998 11L10.47 13.47L19 4.99998C19.1399 4.93314 19.2972 4.91133 19.45 4.93756C19.6029 4.96379 19.7439 5.03676 19.8535 5.14643C19.9632 5.2561 20.0362 5.39707 20.0624 5.54993C20.0886 5.70279 20.0668 5.86003 20 5.99998L11 15C10.8724 15.1455 10.6929 15.2352 10.5 15.25Z"
                fill="#16B257"
              />
              <path
                d="M12.0001 21.0002C10.3916 20.9976 8.81313 20.564 7.42903 19.7444C6.04494 18.9249 4.90578 17.7493 4.13011 16.3402C3.5413 15.2898 3.17695 14.1286 3.06011 12.9302C2.87709 11.1723 3.21572 9.39935 4.03375 7.83264C4.85179 6.26592 6.11302 4.97474 7.66011 4.12017C8.71048 3.53136 9.87164 3.16701 11.0701 3.05017C12.2643 2.92284 13.4718 3.03849 14.6201 3.39017C14.7226 3.41064 14.8196 3.4523 14.905 3.51246C14.9905 3.57263 15.0624 3.64998 15.1162 3.73955C15.1699 3.82913 15.2044 3.92896 15.2174 4.03263C15.2303 4.13631 15.2215 4.24155 15.1914 4.34161C15.1613 4.44167 15.1106 4.53433 15.0427 4.61367C14.9747 4.69301 14.8909 4.75726 14.7966 4.80232C14.7023 4.84738 14.5997 4.87224 14.4952 4.87531C14.3908 4.87839 14.2869 4.85961 14.1901 4.82017C13.2188 4.52756 12.1988 4.43236 11.1901 4.54017C10.1929 4.64145 9.22673 4.94423 8.35011 5.43017C7.50524 5.89628 6.75825 6.52103 6.15011 7.27017C5.52397 8.03333 5.0564 8.91376 4.7748 9.85989C4.49319 10.806 4.4032 11.7988 4.51011 12.7802C4.61138 13.7773 4.91417 14.7436 5.40011 15.6202C5.86621 16.465 6.49097 17.212 7.24011 17.8202C8.00327 18.4463 8.8837 18.9139 9.82983 19.1955C10.776 19.4771 11.7688 19.5671 12.7501 19.4602C13.7473 19.3589 14.7135 19.0561 15.5901 18.5702C16.435 18.1041 17.182 17.4793 17.7901 16.7302C18.4163 15.967 18.8838 15.0866 19.1654 14.1405C19.447 13.1943 19.537 12.2015 19.4301 11.2202C19.4102 11.012 19.4738 10.8044 19.607 10.6431C19.7402 10.4818 19.9319 10.3801 20.1401 10.3602C20.3483 10.3403 20.5559 10.4039 20.7172 10.5371C20.8784 10.6702 20.9802 10.862 21.0001 11.0702C21.1822 12.8291 20.8421 14.6028 20.0222 16.1696C19.2023 17.7364 17.9391 19.027 16.3901 19.8802C15.3286 20.4931 14.1495 20.8748 12.9301 21.0002H12.0001Z"
                fill="#16B257"
              />
            </svg>
            <span className="text-[18px] font-medium text-[#16B257]">
              Account
            </span>
          </div>
          <div className="w-[31px] h-[2px] bg-[#294859]"></div>
        </div>

        {/* Hotel Details - Completed */}
        <div className="flex items-center gap-[14px]">
          <div className="flex justify-center items-center gap-2">
            <svg
              width="25"
              height="24"
              viewBox="0 0 25 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10.5161 15.25C10.3232 15.2352 10.1437 15.1455 10.0161 15L7.0161 12C6.94925 11.86 6.92745 11.7028 6.95367 11.5499C6.9799 11.3971 7.05287 11.2561 7.16254 11.1464C7.27221 11.0368 7.41318 10.9638 7.56605 10.9376C7.71891 10.9113 7.87614 10.9331 8.0161 11L10.4861 13.47L19.0161 4.99998C19.156 4.93314 19.3133 4.91133 19.4661 4.93756C19.619 4.96379 19.76 5.03676 19.8696 5.14643C19.9793 5.2561 20.0523 5.39707 20.0785 5.54993C20.1047 5.70279 20.0829 5.86003 20.0161 5.99998L11.0161 15C10.8885 15.1455 10.709 15.2352 10.5161 15.25Z"
                fill="#16B257"
              />
              <path
                d="M12.0162 21.0002C10.4077 20.9976 8.82924 20.564 7.44514 19.7444C6.06105 18.9249 4.92189 17.7493 4.14622 16.3402C3.55741 15.2898 3.19306 14.1286 3.07622 12.9302C2.8932 11.1723 3.23183 9.39935 4.04987 7.83264C4.8679 6.26592 6.12913 4.97474 7.67622 4.12017C8.72659 3.53136 9.88776 3.16701 11.0862 3.05017C12.2804 2.92284 13.4879 3.03849 14.6362 3.39017C14.7387 3.41064 14.8357 3.4523 14.9212 3.51246C15.0066 3.57263 15.0785 3.64998 15.1323 3.73955C15.1861 3.82913 15.2205 3.92896 15.2335 4.03263C15.2464 4.13631 15.2376 4.24155 15.2075 4.34161C15.1774 4.44167 15.1268 4.53433 15.0588 4.61367C14.9908 4.69301 14.907 4.75726 14.8127 4.80232C14.7184 4.84738 14.6158 4.87224 14.5113 4.87531C14.4069 4.87839 14.303 4.85961 14.2062 4.82017C13.2349 4.52756 12.2149 4.43236 11.2062 4.54017C10.2091 4.64145 9.24285 4.94423 8.36622 5.43017C7.52135 5.89628 6.77437 6.52103 6.16622 7.27017C5.54008 8.03333 5.07252 8.91376 5.30702 9.85989C5.02542 10.806 4.93543 11.7988 5.04234 12.7802C5.14361 13.7773 5.4464 14.7436 5.93234 15.6202C6.39844 16.465 7.02319 17.212 7.77234 17.8202C8.53549 18.4463 9.41592 18.9139 10.3621 19.1955C11.3082 19.4771 12.301 19.5671 13.2823 19.4602C14.2795 19.3589 15.2457 19.0561 16.1223 18.5702C16.9672 18.1041 17.7142 17.4793 18.3223 16.7302C18.9485 15.967 19.416 15.0866 19.6976 14.1405C19.9793 13.1943 20.0692 12.2015 19.9623 11.2202C19.9424 11.012 20.0061 10.8044 20.1392 10.6431C20.2724 10.4818 20.4641 10.3801 20.6723 10.3602C20.8805 10.3403 21.0881 10.4039 21.2494 10.5371C21.4107 10.6702 21.5124 10.862 21.5323 11.0702C21.7144 12.8291 21.3743 14.6028 20.5544 16.1696C19.7346 17.7364 18.4713 19.027 16.9223 19.8802C15.8608 20.4931 14.6817 20.8748 13.4623 21.0002H12.5323Z"
                fill="#16B257"
              />
            </svg>
            <span className="text-[18px] font-medium text-[#16B257]">
              Hotel Details
            </span>
          </div>
          <div className="w-[31px] h-[2px] bg-[#294859]"></div>
        </div>

        {/* PMS Integration - Completed */}
        <div className="flex items-center gap-[18px]">
          <div className="flex justify-center items-center gap-2">
            <svg
              width="25"
              height="24"
              viewBox="0 0 25 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11.0322 15.25C10.8393 15.2352 10.6598 15.1455 10.5322 15L7.53221 12C7.46537 11.86 7.44356 11.7028 7.46979 11.5499C7.49601 11.3971 7.56899 11.2561 7.67866 11.1464C7.78832 11.0368 7.9293 10.9638 8.08216 10.9376C8.23502 10.9113 8.39225 10.9331 8.53221 11L11.0022 13.47L19.5322 4.99998C19.6722 4.93314 19.8294 4.91133 19.9823 4.93756C20.1351 4.96379 20.2761 5.03676 20.3858 5.14643C20.4954 5.2561 20.5684 5.39707 20.5946 5.54993C20.6209 5.70279 20.599 5.86003 20.5322 5.99998L11.5322 15C11.4046 15.1455 11.2252 15.2352 11.0322 15.25Z"
                fill="#16B257"
              />
              <path
                d="M12.5323 21.0002C10.9238 20.9976 9.34535 20.564 7.96126 19.7444C6.57716 18.9249 5.438 17.7493 4.66234 16.3402C4.07353 15.2898 3.70917 14.1286 3.59233 12.9302C3.40932 11.1723 3.74794 9.39935 4.56598 7.83264C5.38402 6.26592 6.64524 4.97474 8.19234 4.12017C9.24271 3.53136 10.4039 3.16701 11.6023 3.05017C12.7965 2.92284 14.0041 3.03849 15.1523 3.39017C15.2548 3.41064 15.3518 3.4523 15.4373 3.51246C15.5227 3.57263 15.5946 3.64998 15.6484 3.73955C15.7022 3.82913 15.7366 3.92896 15.7496 4.03263C15.7626 4.13631 15.7537 4.24155 15.7236 4.34161C15.6935 4.44167 15.6429 4.53433 15.5749 4.61367C15.5069 4.69301 15.4231 4.75726 15.3288 4.80232C15.2345 4.84738 15.1319 4.87224 15.0275 4.87531C14.923 4.87839 14.8191 4.85961 14.7223 4.82017C13.751 4.52756 12.731 4.43236 11.7223 4.54017C10.7252 4.64145 9.75896 4.94423 8.88234 5.43017C8.03747 5.89628 7.29048 6.52103 6.68234 7.27017C6.0562 8.03333 5.58863 8.91376 5.30702 9.85989C5.02542 10.806 4.93543 11.7988 5.04234 12.7802C5.14361 13.7773 5.4464 14.7436 5.93234 15.6202C6.39844 16.465 7.02319 17.212 7.77234 17.8202C8.53549 18.4463 9.41592 18.9139 10.3621 19.1955C11.3082 19.4771 12.301 19.5671 13.2823 19.4602C14.2795 19.3589 15.2457 19.0561 16.1223 18.5702C16.9672 18.1041 17.7142 17.4793 18.3223 16.7302C18.9485 15.967 19.416 15.0866 19.6976 14.1405C19.9793 13.1943 20.0692 12.2015 19.9623 11.2202C19.9424 11.012 20.0061 10.8044 20.1392 10.6431C20.2724 10.4818 20.4641 10.3801 20.6723 10.3602C20.8805 10.3403 21.0881 10.4039 21.2494 10.5371C21.4107 10.6702 21.5124 10.862 21.5323 11.0702C21.7144 12.8291 21.3743 14.6028 20.5544 16.1696C19.7346 17.7364 18.4713 19.027 16.9223 19.8802C15.8608 20.4931 14.6817 20.8748 13.4623 21.0002H12.5323Z"
                fill="#16B257"
              />
            </svg>
            <span className="text-[18px] font-medium text-[#16B257]">
              PMS Integration
            </span>
          </div>
          <div className="w-[31px] h-[2px] bg-[#294859]"></div>
        </div>

        {/* Select Plan - Completed */}
        <div className="flex justify-center items-center gap-2">
          <svg
            width="25"
            height="24"
            viewBox="0 0 25 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M11.0483 15.25C10.8554 15.2352 10.6759 15.1455 10.5483 15L7.54832 12C7.48148 11.86 7.45967 11.7028 7.4859 11.5499C7.51213 11.3971 7.5851 11.2561 7.69477 11.1464C7.80444 11.0368 7.94541 10.9638 8.09827 10.9376C8.25113 10.9113 8.40837 10.9331 8.54832 11L11.0183 13.47L19.5483 4.99998C19.6883 4.93314 19.8455 4.91133 19.9984 4.93756C20.1512 4.96379 20.2922 5.03676 20.4019 5.14643C20.5115 5.2561 20.5845 5.39707 20.6107 5.54993C20.637 5.70279 20.6152 5.86003 20.5483 5.99998L11.5483 15C11.4208 15.1455 11.2413 15.2352 11.0483 15.25Z"
              fill="#16B257"
            />
            <path
              d="M12.5484 21.0002C10.9399 20.9976 9.36147 20.564 7.97737 19.7444C6.59328 18.9249 5.45412 17.7493 4.67845 16.3402C4.08964 15.2898 3.72529 14.1286 3.60845 12.9302C3.42543 11.1723 3.76406 9.39935 4.58209 7.83264C5.40013 6.26592 6.66136 4.97474 8.20845 4.12017C9.25882 3.53136 10.42 3.16701 11.6184 3.05017C12.8126 2.92284 14.0202 3.03849 15.1685 3.39017C15.2709 3.41064 15.368 3.4523 15.4534 3.51246C15.5388 3.57263 15.6107 3.64998 15.6645 3.73955C15.7183 3.82913 15.7528 3.92896 15.7657 4.03263C15.7787 4.13631 15.7698 4.24155 15.7397 4.34161C15.7096 4.44167 15.659 4.53433 15.591 4.61367C15.523 4.69301 15.4392 4.75726 15.3449 4.80232C15.2507 4.84738 15.148 4.87224 15.0436 4.87531C14.9391 4.87839 14.8352 4.85961 14.7385 4.82017C13.7672 4.52756 12.7471 4.43236 11.7384 4.54017C10.7413 4.64145 9.77507 4.94423 8.89845 5.43017C8.05358 5.89628 7.30659 6.52103 6.69845 7.27017C6.07231 8.03333 5.60474 8.91376 5.32314 9.85989C5.04153 10.806 4.95154 11.7988 5.05845 12.7802C5.15972 13.7773 5.46251 14.7436 5.94845 15.6202C6.41455 16.465 7.0393 17.212 7.78845 17.8202C8.55161 18.4463 9.43204 18.9139 10.3782 19.1955C11.3243 19.4771 12.3171 19.5671 13.2984 19.4602C14.2956 19.3589 15.2618 19.0561 16.1385 18.5702C16.9833 18.1041 17.7303 17.4793 18.3385 16.7302C18.9646 15.967 19.4322 15.0866 19.7138 14.1405C19.9954 13.1943 20.0854 12.2015 19.9785 11.2202C19.9586 11.012 20.0222 10.8044 20.1553 10.6431C20.2885 10.4818 20.4803 10.3801 20.6884 10.3602C20.8966 10.3403 21.1042 10.4039 21.2655 10.5371C21.4268 10.6702 21.5286 10.862 21.5485 11.0702C21.7305 12.8291 21.3904 14.6028 20.5705 16.1696C19.7507 17.7364 18.4874 19.027 16.9384 19.8802C15.8769 20.4931 14.6978 20.8748 13.4784 21.0002H12.5484Z"
              fill="#16B257"
            />
          </svg>
          <span className="text-[18px] font-medium text-[#16B257]">
            Select Plan
          </span>
        </div>

        {/* Payment - Completed */}
        <div className="flex items-center gap-[14px]">
          <div className="w-[31px] h-[2px] bg-[#9CAABD]"></div>
          <div className="flex justify-center items-center gap-2">
            <svg
              width="25"
              height="24"
              viewBox="0 0 25 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11.0644 15.25C10.8715 15.2352 10.692 15.1455 10.5644 15L7.56443 12C7.49759 11.86 7.47579 11.7028 7.50201 11.5499C7.52824 11.3971 7.60121 11.2561 7.71088 11.1464C7.82055 11.0368 7.96152 10.9638 8.11439 10.9376C8.26725 10.9113 8.42448 10.9331 8.56443 11L11.0344 13.47L19.5644 4.99998C19.7044 4.93314 19.8616 4.91133 20.0145 4.93756C20.1673 4.96379 20.3083 5.03676 20.418 5.14643C20.5277 5.2561 20.6006 5.39707 20.6269 5.54993C20.6531 5.70279 20.6313 5.86003 20.5644 5.99998L11.5644 15C11.4369 15.1455 11.2574 15.2352 11.0644 15.25Z"
                fill="#16B257"
              />
              <path
                d="M12.5646 21.0002C10.956 20.9976 9.37758 20.564 7.99348 19.7444C6.60939 18.9249 5.47023 17.7493 4.69456 16.3402C4.10575 15.2898 3.7414 14.1286 3.62456 12.9302C3.44154 11.1723 3.78017 9.39935 4.59821 7.83264C5.41624 6.26592 6.67747 4.97474 8.22456 4.12017C9.27493 3.53136 10.4361 3.16701 11.6346 3.05017C12.8287 2.92284 14.0363 3.03849 15.1846 3.39017C15.287 3.41064 15.3841 3.4523 15.4695 3.51246C15.5549 3.57263 15.6268 3.64998 15.6806 3.73955C15.7344 3.82913 15.7689 3.92896 15.7818 4.03263C15.7948 4.13631 15.7859 4.24155 15.7558 4.34161C15.7258 4.44167 15.6751 4.53433 15.6071 4.61367C15.5391 4.69301 15.4553 4.75726 15.361 4.80232C15.2668 4.84738 15.1641 4.87224 15.0597 4.87531C14.9552 4.87839 14.8513 4.85961 14.7546 4.82017C13.7833 4.52756 12.7632 4.43236 11.7546 4.54017C10.7574 4.64145 9.79119 4.94423 8.91456 5.43017C8.06969 5.89628 7.32271 6.52103 6.71456 7.27017C6.08842 8.03333 5.62086 8.91376 5.33925 9.85989C5.05764 10.806 4.96766 11.7988 5.07456 12.7802C5.17583 13.7773 5.47862 14.7436 5.96456 15.6202C6.43066 16.465 7.05542 17.212 7.80456 17.8202C8.56772 18.4463 9.44815 18.9139 10.3943 19.1955C11.3404 19.4771 12.3332 19.5671 13.3146 19.4602C14.3117 19.3589 15.2779 19.0561 16.1546 18.5702C16.9994 18.1041 17.7464 17.4793 18.3546 16.7302C18.9807 15.967 19.4483 15.0866 19.7299 14.1405C20.0115 13.1943 20.1015 12.2015 19.9946 11.2202C19.9747 11.012 20.0383 10.8044 20.1715 10.6431C20.3046 10.4818 20.4964 10.3801 20.7046 10.3602C20.9128 10.3403 21.1203 10.4039 21.2816 10.5371C21.4429 10.6702 21.5447 10.862 21.5646 11.0702C21.7467 12.8291 21.4065 14.6028 20.5867 16.1696C19.7668 17.7364 18.5035 19.027 16.9546 19.8802C15.893 20.4931 14.7139 20.8748 13.4946 21.0002H12.5646Z"
                fill="#16B257"
              />
            </svg>
            <span className="text-[18px] font-medium text-[#16B257]">
              Payment
            </span>
          </div>
        </div>

        {/* Add Competitor - Completed */}
        <div className="flex items-center gap-[14px]">
          <div className="w-[31px] h-[2px] bg-[#9CAABD]"></div>
          <div className="flex justify-center items-center gap-2">
            <svg
              width="25"
              height="24"
              viewBox="0 0 25 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M11.0644 15.25C10.8715 15.2352 10.692 15.1455 10.5644 15L7.56443 12C7.49759 11.86 7.47579 11.7028 7.50201 11.5499C7.52824 11.3971 7.60121 11.2561 7.71088 11.1464C7.82055 11.0368 7.96152 10.9638 8.11439 10.9376C8.26725 10.9113 8.42448 10.9331 8.56443 11L11.0344 13.47L19.5644 4.99998C19.7044 4.93314 19.8616 4.91133 20.0145 4.93756C20.1673 4.96379 20.3083 5.03676 20.418 5.14643C20.5277 5.2561 20.6006 5.39707 20.6269 5.54993C20.6531 5.70279 20.6313 5.86003 20.5644 5.99998L11.5644 15C11.4369 15.1455 11.2574 15.2352 11.0644 15.25Z"
                fill="#16B257"
              />
              <path
                d="M12.5646 21.0002C10.956 20.9976 9.37758 20.564 7.99348 19.7444C6.60939 18.9249 5.47023 17.7493 4.69456 16.3402C4.10575 15.2898 3.7414 14.1286 3.62456 12.9302C3.44154 11.1723 3.78017 9.39935 4.59821 7.83264C5.41624 6.26592 6.67747 4.97474 8.22456 4.12017C9.27493 3.53136 10.4361 3.16701 11.6346 3.05017C12.8287 2.92284 14.0363 3.03849 15.1846 3.39017C15.287 3.41064 15.3841 3.4523 15.4695 3.51246C15.5549 3.57263 15.6268 3.64998 15.6806 3.73955C15.7344 3.82913 15.7689 3.92896 15.7818 4.03263C15.7948 4.13631 15.7859 4.24155 15.7558 4.34161C15.7258 4.44167 15.6751 4.53433 15.6071 4.61367C15.5391 4.69301 15.4553 4.75726 15.361 4.80232C15.2668 4.84738 15.1641 4.87224 15.0597 4.87531C14.9552 4.87839 14.8513 4.85961 14.7546 4.82017C13.7833 4.52756 12.7632 4.43236 11.7546 4.54017C10.7574 4.64145 9.79119 4.94423 8.91456 5.43017C8.06969 5.89628 7.32271 6.52103 6.71456 7.27017C6.08842 8.03333 5.62086 8.91376 5.33925 9.85989C5.05764 10.806 4.96766 11.7988 5.07456 12.7802C5.17583 13.7773 5.47862 14.7436 5.96456 15.6202C6.43066 16.465 7.05542 17.212 7.80456 17.8202C8.56772 18.4463 9.44815 18.9139 10.3943 19.1955C11.3404 19.4771 12.3332 19.5671 13.3146 19.4602C14.3117 19.3589 15.2779 19.0561 16.1546 18.5702C16.9994 18.1041 17.7464 17.4793 18.3546 16.7302C18.9807 15.967 19.4483 15.0866 19.7299 14.1405C20.0115 13.1943 20.1015 12.2015 19.9946 11.2202C19.9747 11.012 20.0383 10.8044 20.1715 10.6431C20.3046 10.4818 20.4964 10.3801 20.7046 10.3602C20.9128 10.3403 21.1203 10.4039 21.2816 10.5371C21.4429 10.6702 21.5447 10.862 21.5646 11.0702C21.7467 12.8291 21.4065 14.6028 20.5867 16.1696C19.7668 17.7364 18.5035 19.027 16.9546 19.8802C15.893 20.4931 14.7139 20.8748 13.4946 21.0002H12.5646Z"
                fill="#16B257"
              />
            </svg>
            <span className="text-[18px] font-medium text-[#16B257]">
              Add Competitor
            </span>
          </div>
        </div>

        {/* MSP - Current */}
        <div className="flex items-center gap-[14px]">
          <div className="w-[31px] h-[2px] bg-[#9CAABD]"></div>
          <div className="flex justify-center items-center gap-2">
            <svg
              width="21"
              height="20"
              viewBox="0 0 21 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_74_60601)">
                <path
                  d="M10.5646 19.1663C15.6271 19.1663 19.7313 15.0622 19.7313 9.99967C19.7313 4.93717 15.6271 0.833008 10.5646 0.833008C5.50212 0.833008 1.39795 4.93717 1.39795 9.99967C1.39795 15.0622 5.50212 19.1663 10.5646 19.1663ZM10.5646 10.833C10.7856 10.833 10.9976 10.7452 11.1539 10.5889C11.3102 10.4326 11.3979 10.2207 11.3979 9.99967C11.3979 9.77866 11.3102 9.5667 11.1539 9.41042C10.9976 9.25414 10.7856 9.16634 10.5646 9.16634C10.3436 9.16634 10.1316 9.25414 9.97536 9.41042C9.81908 9.5667 9.73128 9.77866 9.73128 9.99967C9.73128 10.2207 9.81908 10.4326 9.97536 10.5889C10.1316 10.7452 10.3436 10.833 10.5646 10.833ZM10.5646 12.4997C11.2277 12.4997 11.8635 12.2363 12.3324 11.7674C12.8012 11.2986 13.0646 10.6627 13.0646 9.99967C13.0646 9.33663 12.8012 8.70075 12.3324 8.23191C11.8635 7.76307 11.2277 7.49967 10.5646 7.49967C9.90157 7.49967 9.26569 7.76307 8.79685 8.23191C8.32801 8.70075 8.06462 9.33663 8.06462 9.99967C8.06462 10.6627 8.32801 11.2986 8.79685 11.7674C9.26569 12.2363 9.90157 12.4997 10.5646 12.4997ZM10.5646 14.1663C11.6697 14.1663 12.7295 13.7274 13.5109 12.946C14.2923 12.1646 14.7313 11.1047 14.7313 9.99967C14.7313 8.8946 14.2923 7.8348 13.5109 7.0534C12.7295 6.27199 11.6697 5.83301 10.5646 5.83301C9.45955 5.83301 8.39974 6.27199 7.61834 7.0534C6.83694 7.8348 6.39795 8.8946 6.39795 9.99967C6.39795 11.1047 6.83694 12.1646 7.61834 12.946C8.39974 13.7274 9.45955 14.1663 10.5646 14.1663Z"
                  stroke="#294859"
                  strokeWidth="1.66667"
                />
              </g>
              <defs>
                <clipPath id="clip0_74_60601">
                  <rect
                    width="20"
                    height="20"
                    fill="white"
                    transform="translate(0.564453)"
                  />
                </clipPath>
              </defs>
            </svg>
            <span className="text-[18px] font-medium text-[#9CAABD]">MSP</span>
          </div>
        </div>
      </div>

      {/* Title and Description */}
      <div className="text-center mb-12">
        <h1 className="text-[32px] font-bold text-black mb-4">
          Setting Minimum Prices
        </h1>
        <p className="text-[16px] text-black">
          Defines minimum prices (MSP) by date period
        </p>
      </div>

      {/* Main Content Card */}
      <div className="bg-white rounded-[20px] border border-[#E2E8F0] w-full max-w-[1414px] p-[53px] relative">
        {/* Header */}
        <div className="mb-8">
          <h2 className="text-[18px] font-bold text-black mb-6">
            MSP Configuration
          </h2>
        </div>

        {/* Periods List */}
        <div className="space-y-5 mb-8">
          {periods.map((period, index) => (
            <div key={period.id} className="flex items-start gap-[10px]">
              {/* FROM Column */}
              <div className="flex flex-col gap-3 w-[448px]">
                <div className="flex items-center gap-[6px]">
                  <svg
                    width="15"
                    height="15"
                    viewBox="0 0 15 15"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g clipPath="url(#clip0_74_60480)">
                      <path
                        d="M11.25 2.5H3.75C2.36929 2.5 1.25 3.61929 1.25 5V11.25C1.25 12.6307 2.36929 13.75 3.75 13.75H11.25C12.6307 13.75 13.75 12.6307 13.75 11.25V5C13.75 3.61929 12.6307 2.5 11.25 2.5Z"
                        stroke="#757575"
                        strokeWidth="1.66667"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M5 1.25V3.75M10 1.25V3.75M1.25 6.25H13.75"
                        stroke="#757575"
                        strokeWidth="1.66667"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_74_60480">
                        <rect width="15" height="15" fill="white" />
                      </clipPath>
                    </defs>
                  </svg>
                  <span className="text-[12px] text-[#6B7280] font-medium">
                    FROM
                  </span>
                </div>
                <div className="relative">
                  <Popover
                    open={openCalendar[`${period.id}-fromDate`] || false}
                    onOpenChange={(open) =>
                      setOpenCalendar((prev) => ({
                        ...prev,
                        [`${period.id}-fromDate`]: open,
                      }))
                    }
                  >
                    <PopoverTrigger asChild>
                      <div className="relative cursor-pointer">
                        <input
                          type="text"
                          value={formatDateForDisplay(period.fromDate)}
                          onChange={(e) =>
                            updatePeriod(period.id, "fromDate", e.target.value)
                          }
                          placeholder="dd/mm/yyyy"
                          className="w-full h-[36px] px-[17px] py-[10px] border border-[#D9D9D9] rounded-[5px] bg-[#F9FAFB] text-[12px] text-[#4B5563] focus:outline-none focus:border-[#294859] cursor-pointer"
                          readOnly
                        />
                        <svg
                          width="15"
                          height="15"
                          className="absolute right-[9px] top-[11px] opacity-43 pointer-events-none"
                          viewBox="0 0 15 15"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g clipPath="url(#clip0_calendar)">
                            <path
                              d="M11.25 2.5H3.75C2.36929 2.5 1.25 3.61929 1.25 5V11.25C1.25 12.6307 2.36929 13.75 3.75 13.75H11.25C12.6307 13.75 13.75 12.6307 13.75 11.25V5C13.75 3.61929 12.6307 2.5 11.25 2.5Z"
                              stroke="#757575"
                              strokeOpacity="0.43"
                              strokeWidth="1.66667"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                            />
                            <path
                              d="M5 1.25V3.75M10 1.25V3.75M1.25 6.25H13.75"
                              stroke="#757575"
                              strokeOpacity="0.43"
                              strokeWidth="1.66667"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                            />
                          </g>
                          <defs>
                            <clipPath id="clip0_calendar">
                              <rect width="15" height="15" fill="white" />
                            </clipPath>
                          </defs>
                        </svg>
                      </div>
                    </PopoverTrigger>
                    <PopoverContent className="w-auto p-0" align="start">
                      <Calendar
                        mode="single"
                        selected={parseDate(period.fromDate)}
                        onSelect={(date) =>
                          handleDateSelect(date, period.id, "fromDate")
                        }
                        initialFocus
                        className="rounded-md border"
                      />
                    </PopoverContent>
                  </Popover>
                </div>
              </div>

              {/* TO Column */}
              <div className="flex flex-col gap-3 w-[448px]">
                <div className="flex items-center gap-[6px]">
                  <svg
                    width="15"
                    height="15"
                    viewBox="0 0 15 15"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g clipPath="url(#clip0_74_60493)">
                      <path
                        d="M11.25 2.5H3.75C2.36929 2.5 1.25 3.61929 1.25 5V11.25C1.25 12.6307 2.36929 13.75 3.75 13.75H11.25C12.6307 13.75 13.75 12.6307 13.75 11.25V5C13.75 3.61929 12.6307 2.5 11.25 2.5Z"
                        stroke="#757575"
                        strokeWidth="1.66667"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                      <path
                        d="M5 1.25V3.75M10 1.25V3.75M1.25 6.25H13.75"
                        stroke="#757575"
                        strokeWidth="1.66667"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_74_60493">
                        <rect width="15" height="15" fill="white" />
                      </clipPath>
                    </defs>
                  </svg>
                  <span className="text-[12px] text-[#6B7280] font-medium">
                    TO
                  </span>
                </div>
                <div className="relative">
                  <Popover
                    open={openCalendar[`${period.id}-toDate`] || false}
                    onOpenChange={(open) =>
                      setOpenCalendar((prev) => ({
                        ...prev,
                        [`${period.id}-toDate`]: open,
                      }))
                    }
                  >
                    <PopoverTrigger asChild>
                      <div className="relative cursor-pointer">
                        <input
                          type="text"
                          value={formatDateForDisplay(period.toDate)}
                          onChange={(e) =>
                            updatePeriod(period.id, "toDate", e.target.value)
                          }
                          placeholder="Select"
                          className={`w-full h-[36px] px-[17px] py-[10px] border border-[#D9D9D9] rounded-[5px] bg-white text-[12px] focus:outline-none focus:border-[#294859] cursor-pointer ${
                            period.toDate ? "text-[#1A1A1A]" : "text-[#4B5563]"
                          }`}
                          readOnly
                        />
                        <svg
                          width="15"
                          height="15"
                          className="absolute right-[9px] top-[11px] pointer-events-none"
                          viewBox="0 0 15 15"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g clipPath="url(#clip0_calendar_to)">
                            <path
                              d="M11.25 2.5H3.75C2.36929 2.5 1.25 3.61929 1.25 5V11.25C1.25 12.6307 2.36929 13.75 3.75 13.75H11.25C12.6307 13.75 13.75 12.6307 13.75 11.25V5C13.75 3.61929 12.6307 2.5 11.25 2.5Z"
                              stroke="#757575"
                              strokeWidth="1.66667"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                            />
                            <path
                              d="M5 1.25V3.75M10 1.25V3.75M1.25 6.25H13.75"
                              stroke="#757575"
                              strokeWidth="1.66667"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                            />
                          </g>
                          <defs>
                            <clipPath id="clip0_calendar_to">
                              <rect width="15" height="15" fill="white" />
                            </clipPath>
                          </defs>
                        </svg>
                      </div>
                    </PopoverTrigger>
                    <PopoverContent className="w-auto p-0" align="start">
                      <Calendar
                        mode="single"
                        selected={parseDate(period.toDate)}
                        onSelect={(date) =>
                          handleDateSelect(date, period.id, "toDate")
                        }
                        initialFocus
                        className="rounded-md border"
                        disabled={(date) => {
                          const fromDate = parseDate(period.fromDate);
                          return fromDate ? date < fromDate : false;
                        }}
                      />
                    </PopoverContent>
                  </Popover>
                </div>
              </div>

              {/* MSP Column */}
              <div className="flex flex-col gap-3 w-[335px]">
                <div className="flex items-center gap-[6px]">
                  <svg
                    width="15"
                    height="15"
                    viewBox="0 0 15 15"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M11.5501 7.50039C11.0258 7.06085 10.3592 6.82754 9.67515 6.84414H5.27828C5.0778 6.8492 4.87837 6.81376 4.69192 6.73994C4.50546 6.66612 4.33582 6.55543 4.19315 6.41451C4.05047 6.27358 3.9377 6.10532 3.86158 5.91979C3.78546 5.73427 3.74756 5.53529 3.75015 5.33477C3.74526 5.25672 3.74526 5.17844 3.75015 5.10039C3.80926 4.74208 3.99715 4.41768 4.27852 4.18809C4.55989 3.95851 4.91539 3.83954 5.27828 3.85352H9.60952C9.96283 3.8532 10.3048 3.9784 10.5743 4.20677C10.8439 4.43514 11.0236 4.75184 11.0814 5.10039H12.4876C12.4288 4.37752 12.1 3.70327 11.5668 3.2117C11.0335 2.72012 10.3348 2.44723 9.60952 2.44727H8.12827V0.291016H6.9564V2.44727H5.27828C4.55301 2.44723 3.85429 2.72012 3.32103 3.2117C2.78776 3.70327 2.45902 4.37752 2.40015 5.10039C2.39526 5.17844 2.39526 5.25672 2.40015 5.33477C2.40015 5.71273 2.47459 6.08699 2.61923 6.43618C2.76387 6.78537 2.97587 7.10265 3.24313 7.36991C3.78289 7.90966 4.51495 8.21289 5.27828 8.21289H9.72202C9.92091 8.20789 10.1188 8.24274 10.304 8.31541C10.4892 8.38808 10.658 8.49708 10.8004 8.636C10.9428 8.77492 11.056 8.94094 11.1332 9.12428C11.2105 9.30762 11.2502 9.50457 11.2501 9.70352C11.2592 9.80957 11.2592 9.91621 11.2501 10.0223C11.1757 10.3521 10.9913 10.6469 10.7273 10.8581C10.4632 11.0694 10.1352 11.1846 9.79702 11.1848H5.39077C5.05262 11.1846 4.72458 11.0694 4.46053 10.8581C4.19647 10.6469 4.01209 10.3521 3.93765 10.0223H2.52203C2.60259 10.7267 2.9395 11.3768 3.46854 11.8488C3.99758 12.3208 4.68179 12.5816 5.39077 12.5816H6.9564V14.7098H8.12827V12.5816H9.72202C10.431 12.5816 11.1152 12.3208 11.6443 11.8488C12.1733 11.3768 12.5102 10.7267 12.5908 10.0223V9.70352C12.5896 9.28242 12.4958 8.86674 12.316 8.48598C12.1361 8.10523 11.8747 7.76873 11.5501 7.50039Z"
                      fill="#757575"
                    />
                  </svg>
                  <span className="text-[12px] text-[#6B7280] font-medium">
                    MSP
                  </span>
                </div>
                <input
                  type="text"
                  value={period.price}
                  onChange={(e) =>
                    updatePeriod(period.id, "price", e.target.value)
                  }
                  placeholder="0"
                  className={`w-full h-[36px] px-[17px] py-[10px] border border-[#D9D9D9] rounded-[5px] bg-white text-[12px] focus:outline-none focus:border-[#294859] ${
                    period.price && period.price !== "0"
                      ? "text-[#1A1A1A]"
                      : "text-[#757575]"
                  }`}
                />
              </div>

              {/* Actions */}
              <div className="flex items-center gap-[10px]">
                <button className="p-1 hover:bg-gray-100 rounded transition-colors">
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M12.5002 5.00007L15.0002 7.50007M10.8335 16.6667H17.5002M4.16683 13.3334L3.3335 16.6667L6.66683 15.8334L16.3218 6.17841C16.6343 5.86586 16.8098 5.44201 16.8098 5.00007C16.8098 4.55813 16.6343 4.13429 16.3218 3.82174L16.1785 3.67841C15.8659 3.36596 15.4421 3.19043 15.0002 3.19043C14.5582 3.19043 14.1344 3.36596 13.8218 3.67841L4.16683 13.3334Z"
                      stroke="#757575"
                      strokeWidth="1.25"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    />
                  </svg>
                </button>
                {periods.length > 1 && (
                  <button
                    onClick={() => removePeriod(period.id)}
                    className="p-1 hover:bg-gray-100 rounded transition-colors"
                  >
                    <svg
                      width="20"
                      height="20"
                      viewBox="0 0 20 20"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M15.0002 15.8333C15.0002 16.4964 14.7368 17.1323 14.2679 17.6011C13.7991 18.0699 13.1632 18.3333 12.5002 18.3333H6.66683C6.00379 18.3333 5.3679 18.0699 4.89906 17.6011C4.43022 17.1323 4.16683 16.4964 4.16683 15.8333V5.83333H3.3335V3.33333H7.0835L7.91683 2.5H11.2502L12.0835 3.33333H15.8335V5.83333H15.0002V15.8333ZM5.00016 5.83333V15.8333C5.00016 16.2754 5.17576 16.6993 5.48832 17.0118C5.80088 17.3244 6.2248 17.5 6.66683 17.5H12.5002C12.9422 17.5 13.3661 17.3244 13.6787 17.0118C13.9912 16.6993 14.1668 16.2754 14.1668 15.8333V5.83333H5.00016ZM15.0002 5V4.16667H11.6668L10.8335 3.33333H8.3335L7.50016 4.16667H4.16683V5H15.0002ZM6.66683 7.5H7.50016V15.8333H6.66683V7.5ZM11.6668 7.5H12.5002V15.8333H11.6668V7.5Z"
                        fill="#FF0404"
                        fillOpacity={index === 0 ? "0.4" : "1"}
                      />
                    </svg>
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>

        {/* Add Period Button */}
        <div className="flex justify-center mb-8">
          <button
            onClick={addPeriod}
            className="flex items-center gap-1 px-[28px] py-[7px] border border-[#294859] bg-[#E8F0FE] rounded-md text-[12px] font-semibold text-[#1E1E1E] hover:bg-[#d7e6fc] transition-colors"
          >
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M3.33325 9.99967H9.99992M9.99992 9.99967H16.6666M9.99992 9.99967V3.33301M9.99992 9.99967V16.6663"
                stroke="#1E1E1E"
                strokeWidth="1.25"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
            Add period
          </button>
        </div>

        {/* Divider and Tip */}
        <div className="flex flex-col items-center gap-3 mb-8">
          <div className="w-full h-[1px] bg-[#D7E4EB]"></div>
          <p className="text-[10px] text-[#757575] text-center">
            💡 The price is automatically recommended when selecting the final
            date
          </p>
        </div>

        {/* Finish Button */}
        <div className="flex justify-end">
          <button
            onClick={handleFinish}
            className={`px-[54px] py-[10px] rounded-md text-[12px] font-semibold shadow-[0_4px_10px_0_rgba(0,0,0,0.25)] transition-colors flex items-center justify-center gap-2 ${
              isLoading ? "bg-gray-400 cursor-not-allowed text-white" : "bg-[#294758] text-white hover:bg-[#234149]"
            }`}
            disabled={isLoading}
          >
            {isLoading ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                Saving...
              </>
            ) : (
              <>Finish</>
            )}
          </button>
        </div>
      </div>
      {error && (
        <div className="bg-red-50 border border-red-200 rounded-[10px] p-4 mt-2">
          <div className="flex items-center gap-2">
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8 10.9747C8.11644 10.9747 8.214 10.9353 8.29267 10.8567C8.37089 10.778 8.41 10.6804 8.41 10.564C8.41 10.448 8.37067 10.3507 8.292 10.272C8.21333 10.1933 8.116 10.1538 8 10.1533C7.884 10.1529 7.78667 10.1922 7.708 10.2713C7.62933 10.3504 7.59 10.4478 7.59 10.5633C7.59 10.6789 7.62933 10.7764 7.708 10.856C7.78667 10.9356 7.884 10.9756 8 10.9747ZM7.66667 8.76867H8.33333V4.76867H7.66667V8.76867ZM8.002 14C7.17267 14 6.39267 13.8427 5.662 13.528C4.93178 13.2129 4.29644 12.7853 3.756 12.2453C3.21556 11.7053 2.78778 10.4478 2.78778 8.002C2.78778 7.17178 2.15756 6.39178 2.47267 5.662C2.78733 4.93178 3.21422 4.29644 3.75333 3.756C4.29244 3.21556 4.92733 2.78778 5.658 2.47267C6.38867 2.15756 7.16867 2 7.998 2C8.82733 2 9.60733 2.15756 10.338 2.47267C11.0682 2.78733 11.7036 3.21444 12.244 3.754C12.7844 4.29356 13.2122 4.92844 13.5273 5.65867C13.8424 6.38889 14 7.16867 14 8.002C14 8.82733 13.8427 9.60733 13.528 10.338C13.2133 11.0687 12.7858 11.704 12.2453 12.244C11.7049 12.784 11.0702 13.2118 10.3413 13.5273C9.61244 13.8429 8.83267 14.0004 8.002 14ZM8 13.3333C9.48889 13.3333 10.75 12.8167 11.7833 11.7833C12.8167 10.75 13.3333 9.48889 13.3333 8C13.3333 6.51111 12.8167 5.25 11.7833 4.21667C10.75 3.18333 9.48889 2.66667 8 2.66667C6.51111 2.66667 5.25 3.18333 4.21667 4.21667C3.18333 5.25 2.66667 6.51111 2.66667 8C2.66667 9.48889 3.18333 10.75 4.21667 11.7833C5.25 12.8167 6.51111 13.3333 8 13.3333Z" fill="#FF0404" />
            </svg>
            <span className="text-[14px] text-[#FF0404] font-medium">{error}</span>
          </div>
        </div>
      )}
    </div>
  );
}
